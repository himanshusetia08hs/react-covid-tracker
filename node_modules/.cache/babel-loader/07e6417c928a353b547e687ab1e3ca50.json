{"ast":null,"code":"import _slicedToArray from\"D:\\\\A30\\\\Documents\\\\Summer Training 2021\\\\Project\\\\corona-tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";// use of hooks and react keywords\nimport React,{useEffect,useState}from'react';// bootstrap\nimport'bootstrap/dist/css/bootstrap.min.css';// react-strap\nimport Card from'react-bootstrap/Card';import CardDeck from'react-bootstrap/CardDeck';import Form from'react-bootstrap/Form';import Badge from'react-bootstrap/Badge';import Accordion from'react-bootstrap/Accordion';// readct-icons\nimport{FcGlobe}from\"react-icons/fc\";// HTTP library, API \nimport axios from\"axios\";// components\nimport Header from'./components/Header';import Footer from'./components/Footer';import Datatable from'./components/Datatable';// utilities\nimport moment from'moment';import Columns from'react-columns';import{CircleArrow as ScrollUpButton}from\"react-scroll-up-button\";// functional component\nfunction App(){// hooks and destructuring of array\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),latest=_useState2[0],setLatest=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),india=_useState4[0],setIndia=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),results=_useState6[0],setResults=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),searchStates=_useState8[0],setSearchStates=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),districts=_useState12[0],setDistricts=_useState12[1];// call to get data from disease.sh\nuseEffect(function(){axios.all([axios.get(\"https://disease.sh/v2/all\"),axios.get(\"https://api.covid19india.org/data.json\"),axios.get(\"https://disease.sh/v2/countries/india\"),axios.get(\"https://api.covid19india.org/state_district_wise.json\")])// assigning data in arrays after call to an API's\n.then(function(responseArr){setLatest(responseArr[0].data);setResults(responseArr[1].data.statewise);setIndia(responseArr[2].data);setLoading(false);setDistricts(responseArr[3]);}).catch(function(err){console.log(\"There is error in fetching data\");});},[]);// preloader\nif(loading){return loading;}// method for obtaining current date in IST \nvar date=new Date(parseInt(latest.updated));var lastUpdated=date.toString();// search method \nvar filterStates=results.filter(function(item){// console.log(\"in filterstate\" + item.state);\nreturn searchStates!==\"\"?item.state.toLowerCase().includes(searchStates.toLowerCase()):item;});// displaying Accordion and Datatable\nvar states=filterStates.map(function(data,i){if(data.state===\"Total\"||data.state===\"State Unassigned\"){return null;}else if(districts){// console.log(districts);\n// console.log(districts.data);\nreturn/*#__PURE__*/ // styling for each card\nReact.createElement(Card,{border:\"secondary\",key:i,bg:\"dark\",text:\"light\",className:\"text-center\",style:{margin:\"8px\"}},/*#__PURE__*/React.createElement(Accordion,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Accordion.Toggle,{as:Card.Header,eventKey:\"0\"},/*#__PURE__*/React.createElement(\"b\",{style:{color:\"black\"}},data.state,\" \",/*#__PURE__*/React.createElement(\"img\",{width:\"20ch\",src:\"info.png\",alt:\"info icon\"}))),/*#__PURE__*/React.createElement(Accordion.Collapse,{eventKey:\"0\"},/*#__PURE__*/React.createElement(Datatable,{state:data.state,districts:districts})))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Text,null,/*#__PURE__*/React.createElement(\"b\",null,\"Active: \"),data.active),/*#__PURE__*/React.createElement(Card.Text,null,/*#__PURE__*/React.createElement(\"b\",null,\"Confirmed: \"),data.confirmed),/*#__PURE__*/React.createElement(Card.Text,null,/*#__PURE__*/React.createElement(\"b\",null,\"Deceased: \"),data.deaths),/*#__PURE__*/React.createElement(Card.Text,null,/*#__PURE__*/React.createElement(\"b\",null,\"Recovered: \"),data.recovered)));}return null;});// layout array containing objects for positioning\nvar layout=[{columns:2,query:'min-width: 400px'},{columns:3,query:'min-width: 870px'},{columns:3,query:'min-width: 1100px'}];// rendering method of main functional component\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(CardDeck,null,/*#__PURE__*/React.createElement(Card,{bg:\"warning\",text:\"white\",className:\"text-center\",style:{margin:\"10px\"}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,\" \",/*#__PURE__*/React.createElement(FcGlobe,null),' ',latest.cases,\" \"),/*#__PURE__*/React.createElement(Card.Title,null,\" \",/*#__PURE__*/React.createElement(\"b\",{style:{color:\"black\"}},\" \",/*#__PURE__*/React.createElement(\"img\",{width:\"25ch\",src:\"india.png\",alt:\"indian flag icon\"}),\" \",' ',\" \"),india.todayCases!==0?/*#__PURE__*/React.createElement(Badge,{pill:true,variant:\"danger\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-arrow-up\"}),india.todayCases)):/*#__PURE__*/React.createElement(React.Fragment,null),india.cases)),/*#__PURE__*/React.createElement(Card.Footer,null,\" \",/*#__PURE__*/React.createElement(\"b\",null,\"Cases\"),\" \")),/*#__PURE__*/React.createElement(Card,{bg:\"danger\",text:\"white\",className:\"text-center\",style:{margin:\"10px\"}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,/*#__PURE__*/React.createElement(FcGlobe,null),' ',latest.deaths),/*#__PURE__*/React.createElement(Card.Title,null,/*#__PURE__*/React.createElement(\"b\",{style:{color:\"black\"}},/*#__PURE__*/React.createElement(\"img\",{width:\"25ch\",src:\"india.png\",alt:\"indian flag icon\"}),' '),india.deaths)),/*#__PURE__*/React.createElement(Card.Footer,null,\" \",/*#__PURE__*/React.createElement(\"b\",null,\"Deceased\"),\" \")),/*#__PURE__*/React.createElement(Card,{bg:\"success\",text:\"white\",className:\"text-center\",style:{margin:\"10px\"}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,/*#__PURE__*/React.createElement(FcGlobe,null),' ',latest.recovered),/*#__PURE__*/React.createElement(Card.Title,null,/*#__PURE__*/React.createElement(\"b\",{style:{color:\"black\"}},/*#__PURE__*/React.createElement(\"img\",{width:\"25ch\",src:\"india.png\",alt:\"indian flag icon\"}),' '),india.recovered)),/*#__PURE__*/React.createElement(Card.Footer,null,\" \",/*#__PURE__*/React.createElement(\"b\",null,\"Recovered\"),\" \"))),/*#__PURE__*/React.createElement(\"small\",{style:{color:\"white\"}},\"Last updated \",moment(lastUpdated).calendar()),/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formGroupSearch\"},/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Search a state...\",onChange:function onChange(e){return setSearchStates(e.target.value);}}),/*#__PURE__*/React.createElement(\"small\",{style:{color:\"white\"}},' ',\"[Tap on state for district details]\"))),/*#__PURE__*/React.createElement(Columns,{layout:layout},states),/*#__PURE__*/React.createElement(Footer,null),/*#__PURE__*/React.createElement(ScrollUpButton,null));}export default App;","map":{"version":3,"sources":["D:/A30/Documents/Summer Training 2021/Project/corona-tracker/src/App.js"],"names":["React","useEffect","useState","Card","CardDeck","Form","Badge","Accordion","FcGlobe","axios","Header","Footer","Datatable","moment","Columns","CircleArrow","ScrollUpButton","App","latest","setLatest","india","setIndia","results","setResults","searchStates","setSearchStates","loading","setLoading","districts","setDistricts","all","get","then","responseArr","data","statewise","catch","err","console","log","date","Date","parseInt","updated","lastUpdated","toString","filterStates","filter","item","state","toLowerCase","includes","states","map","i","margin","color","active","confirmed","deaths","recovered","layout","columns","query","cases","todayCases","calendar","e","target","value"],"mappings":"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","sourcesContent":["// use of hooks and react keywords\nimport React, { useEffect, useState } from 'react';\n\n// bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// react-strap\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport Form from 'react-bootstrap/Form'\nimport Badge from 'react-bootstrap/Badge'\nimport Accordion from 'react-bootstrap/Accordion'\n\n// readct-icons\nimport { FcGlobe } from \"react-icons/fc\";\n\n// HTTP library, API \nimport axios from \"axios\";\n\n// components\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Datatable from './components/Datatable';\n\n// utilities\nimport moment from 'moment';\nimport Columns from 'react-columns'\nimport { CircleArrow as ScrollUpButton } from \"react-scroll-up-button\";\n\n\n// functional component\nfunction App() {\n\n  // hooks and destructuring of array\n  const [latest, setLatest] = useState([])\n  const [india, setIndia] = useState([])\n  const [results, setResults] = useState([])\n  const [searchStates, setSearchStates] = useState(\"\")\n  const [loading, setLoading] = useState(true)\n  const [districts, setDistricts] = useState()\n\n  // call to get data from disease.sh\n  useEffect(() => {\n    axios\n      .all([\n        axios.get(\"https://disease.sh/v2/all\"),\n        axios.get(\"https://api.covid19india.org/data.json\"),\n        axios.get(\"https://disease.sh/v2/countries/india\"),\n        axios.get(\"https://api.covid19india.org/state_district_wise.json\")\n      ])\n      // assigning data in arrays after call to an API's\n      .then(responseArr => {\n        setLatest(responseArr[0].data)\n        setResults(responseArr[1].data.statewise)\n        setIndia(responseArr[2].data)\n        setLoading(false)\n        setDistricts(responseArr[3]);\n      })\n      .catch(err => {\n        console.log(\"There is error in fetching data\");\n      });\n  }, []);\n\n  // preloader\n  if (loading) {\n    return loading;\n  }\n\n  // method for obtaining current date in IST \n  const date = new Date(parseInt(latest.updated))\n  const lastUpdated = date.toString();\n\n  // search method \n  const filterStates = results.filter(item => {\n    // console.log(\"in filterstate\" + item.state);\n    return searchStates !== \"\" ? item.state.toLowerCase().includes(searchStates.toLowerCase()) : item\n  })\n\n  // displaying Accordion and Datatable\n  const states = filterStates.map((data, i) => {\n    if ((data.state === \"Total\") || (data.state === \"State Unassigned\")) {\n      return null;\n    }\n    else if (districts) {\n      // console.log(districts);\n      // console.log(districts.data);\n\n      return (\n\n        // styling for each card\n        <Card border=\"secondary\" key={i} bg=\"dark\" text=\"light\" className=\"text-center\" style={{ margin: \"8px\" }} >\n\n          {/* layout and toggling of accordion */}\n          <Accordion >\n\n            <Card >\n\n              {/* toggling on accordion */}\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\" >\n                <b style={{ color: \"black\" }}>{data.state}{\" \"}<img width=\"20ch\" src=\"info.png\" alt=\"info icon\" /></b>\n              </Accordion.Toggle>\n\n              <Accordion.Collapse eventKey=\"0\">\n                <Datatable state={data.state} districts={districts} />\n              </Accordion.Collapse>\n\n            </Card>\n\n          </Accordion>\n\n          {/* Data rendeering on pocket of accordion */}\n          <Card.Body>\n\n            <Card.Text><b>Active: </b>{data.active}</Card.Text>\n            <Card.Text>\n\n              {/* {\n                  data.deltaconfirmed !== 0 ? <Badge pill variant=\"primary\"><small><i className=\"fas fa-arrow-up\"/> {data.deltaconfirmed}</small></Badge> : <></>  \n                } */}\n              <b>Confirmed: </b>{data.confirmed}\n            </Card.Text>\n            <Card.Text><b>Deceased: </b>{data.deaths}</Card.Text>\n            <Card.Text><b>Recovered: </b>{data.recovered}</Card.Text>\n\n          </Card.Body>\n\n        </Card>\n\n      )\n    }\n    return null;\n  })\n\n  // layout array containing objects for positioning\n  var layout = [{\n    columns: 2,\n    query: 'min-width: 400px'\n  }, {\n    columns: 3,\n    query: 'min-width: 870px'\n  }, {\n    columns: 3,\n    query: 'min-width: 1100px'\n  }];\n\n  // rendering method of main functional component\n  return (\n    <div>\n      \n      {/* Header component  */}\n      <Header />\n\n      {/* Displaying global and national total count: cases, deceased, recovered */}\n      <CardDeck>\n\n        {/* Cases card */}\n        <Card bg=\"warning\" text=\"white\" className=\"text-center\" style={{ margin: \"10px\" }}>\n          <Card.Body>\n            <Card.Title> <FcGlobe />{' '}{latest.cases} </Card.Title>\n            <Card.Title > <b style={{ color: \"black\" }}> <img width=\"25ch\" src=\"india.png\" alt=\"indian flag icon\" /> {' '} </b>\n              {\n                india.todayCases !== 0 ? <Badge pill variant=\"danger\"><small><i className=\"fas fa-arrow-up\" />{india.todayCases}</small></Badge> : <></>\n              }\n              {india.cases}\n            </Card.Title>\n          </Card.Body>\n          <Card.Footer> <b>Cases</b> </Card.Footer>\n        </Card>\n\n        {/* Deceased card */}\n        <Card bg=\"danger\" text=\"white\" className=\"text-center\" style={{ margin: \"10px\" }}>\n          <Card.Body>\n            <Card.Title><FcGlobe />{' '}{latest.deaths}</Card.Title>\n            <Card.Title><b style={{ color: \"black\" }}><img width=\"25ch\" src=\"india.png\" alt=\"indian flag icon\" />{' '}</b>{india.deaths}</Card.Title>\n          </Card.Body>\n          <Card.Footer> <b>Deceased</b> </Card.Footer>\n        </Card>\n\n        {/* Recovered card */}\n        <Card bg=\"success\" text=\"white\" className=\"text-center\" style={{ margin: \"10px\" }}>\n          <Card.Body>\n            <Card.Title><FcGlobe />{' '}{latest.recovered}</Card.Title>\n            <Card.Title><b style={{ color: \"black\" }}><img width=\"25ch\" src=\"india.png\" alt=\"indian flag icon\" />{' '}</b>{india.recovered}</Card.Title>\n          </Card.Body>\n          <Card.Footer> <b>Recovered</b> </Card.Footer>\n        </Card>\n\n      </CardDeck>\n\n      {/* Plotting the specific time/ moment */}\n      <small style={{ color: \"white\" }}>Last updated {moment(lastUpdated).calendar()}</small>\n\n      {/* form block for selecting the states manually */}\n      <Form>\n        <Form.Group controlId=\"formGroupSearch\" >\n          <Form.Control type=\"text\" placeholder=\"Search a state...\" onChange={e => setSearchStates(e.target.value)} />\n          <small style={{ color: \"white\" }}>{' '}[Tap on state for district details]</small>\n        </Form.Group>\n      </Form>\n\n      {/* In-built tag used for layout of accordions (Positioning) by passing layout array */}\n      <Columns layout={layout}>{states}</Columns>\n\n      {/* Footer component */}\n      <Footer />\n      \n      {/* scroll-up button component */}\n      <ScrollUpButton />\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}